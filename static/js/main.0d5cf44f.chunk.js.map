{"version":3,"sources":["Forms.js","ConfirmDelete.js","Tasks.js","Groups.js","index.js"],"names":["GroupForm","addGroup","exitForm","useState","title","setTitle","onSubmit","type","onChange","e","target","value","TaskForm","action","task","note","taskForm","setTaskForm","useEffect","className","rows","ConfirmDelete","deleteFunc","deleteItem","closeCallback","onClick","item","closed","opacity","translateY","open","variants","transition","staggerChildren","delayChildren","staggerDirection","wait","containerVariants","scale","originX","originY","delay","formVariants","Tasks","group","updateGroupTasks","useImmer","tasks","setTasks","show","selected","removeBox","setRemoveBox","removeTask","taskName","draft","div","initial","animate","exit","style","exitBeforeEnter","ul","Object","entries","map","taskObj","li","completed","Groups","JSON","parse","localStorage","getItem","groups","setGroups","groupForm","selectedGroup","expand","setExpand","name","removeGroup","keys","length","setItem","stringify","groupName","groupObj","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5cf44f.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n\nfunction GroupForm ({ addGroup, exitForm, }) {\n    const [title, setTitle] = useState('');\n    const onSubmit = () => {\n        addGroup(title);\n        exitForm();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Title:\n                <input type='text' onChange={(e) => setTitle(e.target.value)} value={title}/>\n            </label>\n            <input type='submit' value='Submit' />\n        </form>\n    )\n}\n\n\nfunction TaskForm ({ action, task, exitForm, }) {\n    const [taskForm, setTaskForm] = useState({\n        title: task?.title,\n        note: task?.note,\n    })\n\n    const onSubmit = () => {\n        action(taskForm);\n        exitForm();\n    }\n\n    useEffect(() => {\n        setTaskForm({\n            title: task?.title,\n            note: task?.note,\n        })\n    }, [task])\n\n\n    return (\n        <form onSubmit={onSubmit} className='taskForm'>\n            <label>Title:\n                <input type='text' onChange={(e) => setTaskForm({ ...taskForm, title: e.target.value })} value={taskForm.title || ''}/>\n            </label>\n            <label>Note:\n                <textarea rows={3} onChange={(e) => setTaskForm({ ...taskForm, note: e.target.value })} value={taskForm.note || ''}/>\n            </label>\n            <input type='submit' value='Submit'/>\n        </form>\n    )\n}\n\nexport { GroupForm, TaskForm, }","import React from 'react';\n\nexport const ConfirmDelete = ({ deleteFunc, deleteItem, closeCallback, }) => {\n    return (\n        <div className='confirmDelete'>\n            <p>Are you sure?</p>\n            <button onClick={() => {\n                        deleteFunc(deleteItem);\n                        closeCallback();\n                    }}\n                >Yes</button>\n            <button onClick={() => closeCallback()}>No</button>\n        </div>\n    )\n}","import { useImmer } from 'use-immer';\nimport { useState, useEffect } from 'react';\n\nimport { TaskForm } from './Forms';\nimport { ConfirmDelete } from './ConfirmDelete';\n\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst item = {\n    closed: {\n        opacity: 0,\n        translateY: 40,\n    },\n    open: {\n        opacity: 1,\n        translateY: 0,\n    },\n}\n\nconst variants = {\n    open: {\n        opacity: 1,\n        transition: { \n            staggerChildren: 0.15, \n            delayChildren: 0.1,\n\n        }\n    },\n    closed: {\n        opacity: 0,\n        transition: { \n            staggerChildren: 0.15, \n            staggerDirection: -1,\n            wait: 'afterChildren' \n        }\n    }\n};\n\nconst containerVariants = {\n    open : {\n        scale: 1,\n        opacity: 1,\n    },\n    closed: {\n        opacity: 0,\n        originX: 0.8,\n        originY: 0,\n        scale: 0,\n        transition: {\n            delay: 0.3,\n            wait: 'afterChildren'\n        }\n    }\n}\n\nconst formVariants = {\n    open : {\n        scale: 1,\n        opacity: 1,\n    },\n    closed: {\n        opacity: 0,\n        originX: 0.8,\n        originY: 0,\n        scale: 0,\n    }\n}\n\n\nfunction Tasks({ group, updateGroupTasks }) {\n    const [tasks, setTasks] = useImmer(group.tasks || {});\n    const [taskForm, setTaskForm] = useState({\n        show: false,\n        action: null,\n        selected: null,\n    });\n    const [removeBox, setRemoveBox] = useState({\n        show: false,\n        item: null,\n    });\n\n    const addTask = (task) => {\n        setTasks(draft => {\n            draft[task.title] = task;\n        })\n    }\n\n    const updateTask = (task) => {\n        setTasks(draft => {\n            delete draft[taskForm.selected.title]; \n            draft[task.title] = task;\n        })\n    }\n\n    const removeTask = (taskName) => {\n        setTasks(draft => {\n            delete draft[taskName];\n        })\n    }\n\n    const completeTaskToggle = (task) => {\n        setTasks(draft => {\n            draft[task].completed = (tasks[task].completed) ? false : true;\n        })\n    }\n\n    useEffect(() => {\n        updateGroupTasks({ group, tasks });\n    }, [tasks, updateGroupTasks, group])\n \n    return (\n        <motion.div \n            className='tasksContainer'\n            variants={containerVariants}\n            initial='closed'\n            animate='open'\n            exit='closed'\n            key='container'\n        >\n            <div className='tasks'>\n                <div className='head-bar'>\n                    <p style={{ 'text-decoration': 'underline' }}>Tasks</p>\n                    <button className='new-btn' \n                        onClick={() => {\n                            setTaskForm({\n                                show: (taskForm.show) ? false : true,\n                                action: 'new'\n                            });\n                        }\n                    }>{(taskForm.show) ? '-' : '+'}</button>\n                </div>\n\n                <AnimatePresence exitBeforeEnter>\n                    {taskForm.show && \n                        <motion.div\n                            variants={formVariants}\n                            initial='closed'\n                            animate='open'\n                            exit='closed'\n                            key='form'\n                        >\n                            <TaskForm \n                                action={(taskForm.action === 'new') ? addTask : updateTask} \n                                task={taskForm.selected} \n                                exitForm={() => setTaskForm({ show: false })}\n                            /> \n                        </motion.div>\n                    }\n                </AnimatePresence>\n                    \n                <motion.ul\n                    variants={variants}\n                    initial='closed'\n                    animate='open'\n                    exit='closed'\n                    key='list'\n                >\n                    {Object.entries(tasks).map(([taskName, taskObj]) => (\n                            <motion.li \n                                key={taskName}\n                                variants={item}\n                            >\n                                <div className='task'>\n                                    <button className='remove-btn' onClick={() => setRemoveBox({ show: true, item: taskName, })}>x</button>\n                                    <p className={(taskObj.completed) ? 'title crossed' : 'title'} onClick={() => {\n                                        setTaskForm({\n                                            show: true,\n                                            action: 'update',\n                                            selected: taskObj,\n                                        });\n                                    }\n                                    }>{taskName}</p>\n                                    <button className='complete-btn' onClick={() => completeTaskToggle(taskName)}>&#10003;</button>\n                                </div>\n                                {removeBox.show && (removeBox.item === taskName) &&\n                                    <ConfirmDelete \n                                        deleteFunc={removeTask}\n                                        deleteItem={removeBox.item}\n                                        closeCallback={() => setRemoveBox({ show: false, })}\n                                    />\n                                }\n                            </motion.li>\n                        )\n                    )}\n                </motion.ul>\n            </div>\n        </motion.div>\n    )\n}\n\n\nexport default Tasks","import './App.scss';\nimport { useState, useEffect } from 'react';\n\nimport { GroupForm } from './Forms';\nimport Tasks from './Tasks';\nimport { ConfirmDelete } from './ConfirmDelete';\nimport { useImmer } from 'use-immer';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst formVariants = {\n  open : {\n      scale: 1,\n      opacity: 1,\n  },\n  closed: {\n      opacity: 0,\n      originX: 0.8,\n      originY: 0,\n      scale: 0,\n  }\n}\n\n\nfunction Groups() {\n  const [groups, setGroups] = useImmer(JSON.parse(localStorage.getItem('Groups')) || {});\n  const [expand, setExpand] = useState({\n    groupForm: false,\n    selectedGroup: null,\n  });\n  const [removeBox, setRemoveBox] = useState({\n    show: false,\n    item: null,\n  });\n  \n  const addGroup = (name) => {\n    setGroups(draft => {\n      draft[name] = {\n        name,\n        tasks: {}\n      };\n    })\n  }\n\n  const removeGroup = (name) => {\n    setGroups(draft => {\n      delete draft[name];\n    })\n  } \n\n  const updateGroupTasks = ({ group, tasks }) => {\n    setGroups(draft => {\n      draft[group.name].tasks = tasks;\n    })\n  }\n\n  useEffect(() => {\n    // Initialize General Group if empty\n    if (Object.keys(groups).length === 0) {\n      addGroup('General');\n    }\n    localStorage.setItem('Groups', JSON.stringify(groups));\n  })\n\n  return (\n    <div>\n      <div className='groups'>\n        <div className='head-bar'>\n          <h2>Groups</h2>\n          <button className='new-btn' onClick={() => setExpand({ groupForm: (expand.groupForm) ? false : true })}>{(expand.groupForm) ? '-' : '+'}</button>\n        </div>\n        <AnimatePresence>\n          {expand.groupForm &&\n            <motion.div\n              variants={formVariants}\n              initial='closed'\n              animate='open'\n              exit='closed'\n              key='form'\n            >\n              <GroupForm \n                addGroup={addGroup}\n                exitForm={() => setExpand({ groupForm: false })}\n              /> \n            </motion.div> \n          }\n        </AnimatePresence>\n        <ul>\n          {Object.entries(groups).map(([groupName, groupObj]) => {\n            return (\n              <li key={groupName} className='group'>\n                <div className='groupHeader'>\n                  <button className='remove-btn' onClick={() => setRemoveBox({ show: true, item: groupName, })}>x</button>\n                  <p className='title'>{groupName} <span className='taskCount'>{`(${Object.keys(groupObj.tasks).length})`}</span></p>\n                  \n                </div>\n                <div className='taskBtn'>\n                  {expand.selectedGroup === groupName \n                    ?\n                      <button className='minimize' onClick={() => setExpand({ selectedGroup: null })}>-</button>\n                    :\n                      <button className='expand' onClick={() => setExpand({ selectedGroup: groupName })}>+</button>\n                  }\n                </div>\n\n                <AnimatePresence exitBeforeEnter>\n                  {expand.selectedGroup === groupName && \n                    <Tasks group={groupObj} updateGroupTasks={updateGroupTasks}/>\n                  }\n                </AnimatePresence>\n\n                {removeBox.show && (removeBox.item === groupName) &&\n                  <ConfirmDelete \n                    deleteFunc={removeGroup}\n                    deleteItem={removeBox.item}\n                    closeCallback={() => setRemoveBox({ show: false, })}\n                  />\n                }\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To-Do</h1>\n      </header>\n      <Groups />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Groups';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}