{"version":3,"sources":["components/Forms.js","components/ConfirmDelete.js","components/Task.js","components/Tasks.js","components/Group.js","components/Groups.js","components/App.js","index.js"],"names":["formVariants","open","scale","opacity","closed","originX","originY","FormContainer","props","div","layout","transition","fade","variants","initial","animate","exit","children","GroupForm","addGroup","exitForm","useState","title","setTitle","onSubmit","type","onChange","e","target","value","TaskForm","action","task","note","taskForm","setTaskForm","useEffect","className","rows","ConfirmDelete","deleteFunc","deleteItem","closeCallback","onClick","translateY","Task","tasks","setTasks","show","item","removeBox","setRemoveBox","li","completed","selected","draft","completeTaskToggle","taskName","staggerChildren","delayChildren","staggerDirection","wait","containerVariants","delay","Tasks","group","updateGroupTasks","useImmer","style","exitBeforeEnter","ul","Object","entries","map","sort","a","b","i","Group","expand","setExpand","setGroups","name","keys","length","selectedGroup","button","Groups","JSON","parse","localStorage","getItem","groups","groupForm","setItem","stringify","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ec585ce.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\nconst formVariants = {\n    open : {\n        scale: 1,\n        opacity: 1,\n    },\n    closed: {\n        opacity: 0,\n        originX: 0.8,\n        originY: 0,\n        scale: 0,\n    }\n};\n\nconst FormContainer = (props) => (\n    <motion.div\n        layout\n        transition={{ fade: 'easeIn' }}\n        variants={formVariants}\n        initial='closed'\n        animate='open'\n        exit='closed'\n        key='form'\n    >\n        {props.children}\n    </motion.div>\n)\n\nfunction GroupForm ({ addGroup, exitForm, }) {\n    const [title, setTitle] = useState('');\n    const onSubmit = () => {\n        addGroup(title);\n        exitForm();\n    };\n\n    return (\n        <FormContainer>\n            <form onSubmit={onSubmit}>\n                <label>Title:\n                    <input type='text' onChange={(e) => setTitle(e.target.value)} value={title}/>\n                </label>\n                <input type='submit' value='Submit' />\n            </form>\n        </FormContainer>\n    )\n};\n\n\nfunction TaskForm ({ action, task, exitForm, }) {\n    const [taskForm, setTaskForm] = useState({\n        title: task?.title,\n        note: task?.note,\n    })\n\n    const onSubmit = () => {\n        action(taskForm);\n        exitForm();\n    }\n\n    useEffect(() => {\n        setTaskForm({\n            title: task?.title,\n            note: task?.note,\n        })\n    }, [task])\n\n    return (\n        <FormContainer>\n            <form onSubmit={onSubmit} className='taskForm'>\n                <label>Title:\n                    <input type='text' onChange={(e) => setTaskForm({ ...taskForm, title: e.target.value })} value={taskForm.title || ''}/>\n                </label>\n                <label>Note:\n                    <textarea rows={3} onChange={(e) => setTaskForm({ ...taskForm, note: e.target.value })} value={taskForm.note || ''}/>\n                </label>\n                <input type='submit' value='Submit'/>\n            </form>\n        </FormContainer>\n    )\n};\n\nexport { GroupForm, TaskForm, }","import React from 'react';\n\nexport const ConfirmDelete = ({ deleteFunc, deleteItem, closeCallback, }) => {\n    return (\n        <div className='confirmDelete'>\n            <p>Are you sure?</p>\n            <button onClick={() => {\n                        deleteFunc(deleteItem);\n                        closeCallback();\n                    }}\n                >Yes</button>\n            <button onClick={() => closeCallback()}>No</button>\n        </div>\n    )\n}","import { motion } from 'framer-motion';\nimport { ConfirmDelete } from './ConfirmDelete';\nimport { useState } from 'react';\n\nconst variants = {\n    closed: {\n        opacity: 0,\n        translateY: 40,\n    },\n    open: {\n        opacity: 1,\n        translateY: 0,\n    },\n}\n\n\nconst Task = ({task, tasks, setTasks, setTaskForm}) => {\n    const [removeBox, setRemoveBox] = useState({\n        show: false,\n        item: null,\n    });\n\n    const removeTask = (taskName) => {\n        setTasks(draft => {\n            delete draft[taskName];\n        })\n    }\n\n    const completeTaskToggle = (task) => {\n        setTasks(draft => {\n            draft[task].completed = (tasks[task].completed) ? false : true;\n        })\n    }\n\n    return (\n        <motion.li variants={variants}>\n            <div className='task'>\n                <button className='remove-btn' onClick={() => setRemoveBox({ \n                    show: true, \n                    item: task.title, \n                })}>x</button>\n                <p className={`title ${(task.completed) ? 'crossed' : ''}`} onClick={() => {\n                    setTaskForm({\n                        show: true,\n                        action: 'update',\n                        selected: task,\n                    });\n                }}>{task.title}</p>\n                <button className='complete-btn' onClick={() => completeTaskToggle(task.title)}>&#10003;</button>\n            </div>\n            {removeBox.show && (removeBox.item === task.title) &&\n                <ConfirmDelete \n                    deleteFunc={removeTask}\n                    deleteItem={removeBox.item}\n                    closeCallback={() => setRemoveBox({ show: false, })}\n                />\n            }\n        </motion.li>\n    )\n}\n\nexport default Task","import { useImmer } from 'use-immer';\nimport { useState, useEffect } from 'react';\n\nimport { TaskForm } from './Forms';\nimport Task from './Task';\n\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst variants = {\n    open: {\n        opacity: 1,\n        transition: { \n            staggerChildren: 0.15, \n            delayChildren: 0.1,\n\n        },\n    },\n    closed: {\n        opacity: 0,\n        transition: { \n            staggerChildren: 0.15, \n            staggerDirection: -1,\n            wait: 'afterChildren' \n        },\n    }\n};\n\nconst containerVariants = {\n    open : {\n        scale: 1,\n        opacity: 1,\n    },\n    closed: {\n        opacity: 0,\n        originX: 0.8,\n        originY: 0,\n        scale: 0,\n        transition: {\n            delay: 0.3,\n            wait: 'afterChildren'\n        }\n    }\n}\n\nfunction Tasks({ group, updateGroupTasks }) {\n    const [tasks, setTasks] = useImmer(group.tasks || {});\n    const [taskForm, setTaskForm] = useState({\n        show: false,\n        action: null,\n        selected: null,\n    });\n\n\n    const addTask = (task) => {\n        setTasks(draft => {\n            draft[task.title] = task;\n        })\n    }\n\n    const updateTask = (task) => {\n        setTasks(draft => {\n            delete draft[taskForm.selected.title]; \n            draft[task.title] = task;\n        })\n    }\n\n    useEffect(() => {\n        updateGroupTasks({ group, tasks });\n    }, [tasks, updateGroupTasks, group])\n \n    return (\n        <motion.div \n            layout\n            className='tasksContainer'\n            variants={containerVariants}\n            initial='closed'\n            animate='open'\n            exit='closed'\n            key='container'\n        >\n            <div className='tasks'>\n                <motion.div className='head-bar' layout>\n                    <p style={{ 'textDecoration': 'underline' }}>Tasks</p>\n                    <button className='new-btn' \n                        onClick={() => {\n                            setTaskForm({\n                                show: (!taskForm.show),\n                                action: 'new'\n                            });\n                        }\n                    }>{(taskForm.show) ? '-' : '+'}</button>\n                </motion.div>\n\n                <AnimatePresence exitBeforeEnter>\n                    {taskForm.show && \n                        <TaskForm \n                            action={(taskForm.action === 'new') ? addTask : updateTask} \n                            task={taskForm.selected} \n                            exitForm={() => setTaskForm({ show: false })}\n                        /> \n                    }\n                </AnimatePresence>\n                    \n                <motion.ul\n                    className='tasksList'\n                    layout\n                    variants={variants}\n                    initial='closed'\n                    animate='open'\n                    exit='closed'\n                    key='list'\n                >\n                    {(Object.entries(tasks).map(([taskName, task]) => task).sort((a, b) => (a.completed === b.completed) ? 0 : (a.completed) ? -1 : 1))\n                        .map((task, i) => (\n                        <Task \n                            task={task} \n                            tasks={tasks} \n                            setTasks={setTasks} \n                            setTaskForm={setTaskForm}\n                            key={i} \n                        />\n                    ))}\n                </motion.ul>\n            </div>\n        </motion.div>\n    )\n}\n\n\nexport default Tasks","import { useState } from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport Tasks from './Tasks';\nimport { ConfirmDelete } from './ConfirmDelete';\n\nconst Group = ({group, expand, setExpand, setGroups}) => {\n    const [removeBox, setRemoveBox] = useState({\n        show: false,\n        item: null,\n    });\n\n    const removeGroup = (name) => {\n        setGroups(draft => {\n            delete draft[name];\n        });\n    };\n    \n    const updateGroupTasks = ({ group, tasks }) => {\n        setGroups(draft => {\n          draft[group.name].tasks = tasks;\n        });\n    };\n\n    return (\n        <motion.div key={group.name} className='group' layout>\n        <motion.div className='groupHeader' layout>\n            <button className='remove-btn' onClick={() => setRemoveBox({ show: true, item: group.name, })}>x</button>\n            <p className='title'>{group.name} <span className='taskCount'>{`(${Object.keys(group.tasks).length})`}</span></p>\n            \n        </motion.div>\n        <div className='taskBtn'>\n            {expand.selectedGroup === group.name \n            ?\n                <motion.button className='minimize' onClick={() => setExpand({ selectedGroup: null })} layout>-</motion.button>\n            :\n                <motion.button className='expand' onClick={() => setExpand({ selectedGroup: group.name })} layout>+</motion.button>\n            }\n        </div>\n\n        <AnimatePresence>\n            {expand.selectedGroup === group.name && \n            <Tasks group={group} updateGroupTasks={updateGroupTasks}/>\n            }\n        </AnimatePresence>\n\n        {removeBox.show && (removeBox.item === group.name) &&\n            <ConfirmDelete \n            deleteFunc={removeGroup}\n            deleteItem={removeBox.item}\n            closeCallback={() => setRemoveBox({ show: false, })}\n            />\n        }\n        </motion.div>\n    )\n};\n\n\nexport default Group","import { useState, useEffect } from 'react';\nimport { useImmer } from 'use-immer';\nimport { AnimatePresence, motion, AnimateSharedLayout } from 'framer-motion';\n\nimport { GroupForm } from './Forms';\nimport Group from './Group';\n\nfunction Groups() {\n  const [groups, setGroups] = useImmer(JSON.parse(localStorage.getItem('Groups')) || {});\n  const [expand, setExpand] = useState({\n    groupForm: false,\n    selectedGroup: null,\n  });\n\n  const addGroup = (name) => {\n    setGroups(draft => {\n      draft[name] = {\n        name,\n        tasks: {}\n      };\n    })\n  }\n\n  useEffect(() => {\n    // Initialize General Group if empty\n    if (Object.keys(groups).length === 0) {\n      addGroup('General');\n    }\n    localStorage.setItem('Groups', JSON.stringify(groups));\n  })\n\n  return (\n    <AnimateSharedLayout>\n      <motion.div className='groups' layout>\n        <motion.div className='head-bar' layout>\n          <h2>Groups</h2>\n          <button className='new-btn' onClick={() => setExpand({ groupForm: !(expand.groupForm)})}>{(expand.groupForm) ? '-' : '+'}</button>\n        </motion.div>\n        \n        <AnimatePresence>\n          {expand.groupForm &&\n              <GroupForm \n                addGroup={addGroup}\n                exitForm={() => setExpand({ groupForm: false })}\n              /> \n          }\n        </AnimatePresence>\n\n          {Object.entries(groups).map(([groupName, group], i) => (\n            <Group group={group} expand={expand} setExpand={setExpand} setGroups={setGroups} key={i}/>)\n          )}\n\n      </motion.div>\n    </AnimateSharedLayout>\n  )\n}\n\nexport default Groups\n","import './App.scss';\nimport Groups from './Groups';\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>To-Do</h1>\n        </header>\n        <Groups />\n      </div>\n    );\n  }\n  \n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}