{"version":3,"sources":["Forms.js","ConfirmDelete.js","Tasks.js","Groups.js","index.js"],"names":["GroupForm","addGroup","exitForm","useState","title","setTitle","onSubmit","type","onChange","e","target","value","TaskForm","action","task","note","taskForm","setTaskForm","useEffect","className","rows","ConfirmDelete","deleteFunc","deleteItem","closeCallback","onClick","animationProps","initial","opacity","translateY","animate","exit","Tasks","group","updateGroupTasks","useImmer","tasks","setTasks","show","selected","item","removeBox","setRemoveBox","removeTask","taskName","draft","style","Object","entries","map","index","taskObj","li","variants","transition","delay","completed","Groups","JSON","parse","localStorage","getItem","groups","setGroups","groupForm","selectedGroup","expand","setExpand","name","removeGroup","keys","length","setItem","stringify","groupName","groupObj","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9ab1583.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n\nfunction GroupForm ({ addGroup, exitForm, }) {\n    const [title, setTitle] = useState('');\n    const onSubmit = () => {\n        addGroup(title);\n        exitForm();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Title:\n                <input type='text' onChange={(e) => setTitle(e.target.value)} value={title}/>\n            </label>\n            <input type='submit' value='Submit' />\n        </form>\n    )\n}\n\n\nfunction TaskForm ({ action, task, exitForm, }) {\n    const [taskForm, setTaskForm] = useState({\n        title: task?.title,\n        note: task?.note,\n    })\n\n    const onSubmit = () => {\n        action(taskForm);\n        exitForm();\n    }\n\n    useEffect(() => {\n        setTaskForm({\n            title: task?.title,\n            note: task?.note,\n        })\n    }, [task])\n\n\n    return (\n        <form onSubmit={onSubmit} className='taskForm'>\n            <label>Title:\n                <input type='text' onChange={(e) => setTaskForm({ ...taskForm, title: e.target.value })} value={taskForm.title || ''}/>\n            </label>\n            <label>Note:\n                <textarea rows={3} onChange={(e) => setTaskForm({ ...taskForm, note: e.target.value })} value={taskForm.note || ''}/>\n            </label>\n            <input type='submit' value='Submit'/>\n        </form>\n    )\n}\n\nexport { GroupForm, TaskForm, }","import React from 'react';\n\nexport const ConfirmDelete = ({ deleteFunc, deleteItem, closeCallback, }) => {\n    return (\n        <div className='confirmDelete'>\n            <p>Are you sure?</p>\n            <button onClick={() => {\n                        deleteFunc(deleteItem);\n                        closeCallback();\n                    }}\n                >Yes</button>\n            <button onClick={() => closeCallback()}>No</button>\n        </div>\n    )\n}","import { useImmer } from 'use-immer';\nimport { useState, useEffect } from 'react';\n\nimport { TaskForm } from './Forms';\nimport { ConfirmDelete } from './ConfirmDelete';\n\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst animationProps = {\n    initial: {\n        opacity: 0,\n        translateY: 40,\n    },\n    animate: {\n        opacity: 1,\n        translateY: 0,\n    },\n    exit: {\n        opacity: 0,\n        translateY: 40,\n    }\n}\n\n\nfunction Tasks({ group, updateGroupTasks }) {\n    const [tasks, setTasks] = useImmer(group.tasks || {});\n    const [taskForm, setTaskForm] = useState({\n        show: false,\n        action: null,\n        selected: null,\n    });\n    const [removeBox, setRemoveBox] = useState({\n        show: false,\n        item: null,\n    });\n\n    const addTask = (task) => {\n        setTasks(draft => {\n            draft[task.title] = task;\n        })\n    }\n\n    const updateTask = (task) => {\n        setTasks(draft => {\n            delete draft[taskForm.selected.title]; \n            draft[task.title] = task;\n        })\n    }\n\n    const removeTask = (taskName) => {\n        setTasks(draft => {\n            delete draft[taskName];\n        })\n    }\n\n    const completeTaskToggle = (task) => {\n        setTasks(draft => {\n            draft[task].completed = (tasks[task].completed) ? false : true;\n        })\n    }\n\n    useEffect(() => {\n        updateGroupTasks({ group, tasks });\n    }, [tasks, updateGroupTasks, group])\n \n    return (\n        <div className='tasksContainer'>\n            <div className='tasks'>\n                <div className='head-bar'>\n                    <p style={{ 'text-decoration': 'underline' }}>Tasks</p>\n                    <button className='new-btn' \n                        onClick={() => {\n                            setTaskForm({\n                                show: true,\n                                action: 'new'\n                            });\n                        }\n                    }>+</button>\n                </div>\n                <AnimatePresence initial={true}>\n                    <ul>\n                        {Object.entries(tasks).map(([taskName, taskObj], index) => (\n                                <motion.li \n                                    key={taskName}\n                                    variants={animationProps}\n                                    initial='initial'\n                                    animate='animate'\n                                    exit='exit'\n                                    transition={{ delay: 0.1*index }}\n                                >\n                                    <div className='task'>\n                                        <button className='remove-btn' onClick={() => setRemoveBox({ show: true, item: taskName, })}>x</button>\n                                        <p className={(taskObj.completed) ? 'title crossed' : 'title'} onClick={() => {\n                                            setTaskForm({\n                                                show: true,\n                                                action: 'update',\n                                                selected: taskObj,\n                                            });\n                                        }\n                                        }>{taskName}</p>\n                                        <button className='complete-btn' onClick={() => completeTaskToggle(taskName)}>&#10003;</button>\n                                    </div>\n                                    {removeBox.show && (removeBox.item === taskName) &&\n                                        <ConfirmDelete \n                                            deleteFunc={removeTask}\n                                            deleteItem={removeBox.item}\n                                            closeCallback={() => setRemoveBox({ show: false, })}\n                                        />\n                                    }\n                                </motion.li>\n                            )\n                        )}\n                    </ul>\n                </AnimatePresence>\n            </div>\n            {taskForm.show && \n                <TaskForm \n                    action={(taskForm.action === 'new') ? addTask : updateTask} \n                    task={taskForm.selected} \n                    exitForm={() => setTaskForm({ show: false })}\n                /> \n            }\n        </div>\n    )\n}\n\n\nexport default Tasks","import './App.scss';\nimport { useState, useEffect } from 'react';\n\nimport { GroupForm } from './Forms';\nimport Tasks from './Tasks';\nimport { ConfirmDelete } from './ConfirmDelete';\nimport { useImmer } from 'use-immer';\n\n\nfunction Groups() {\n  const [groups, setGroups] = useImmer(JSON.parse(localStorage.getItem('Groups')) || {});\n  const [expand, setExpand] = useState({\n    groupForm: false,\n    selectedGroup: null,\n  });\n  const [removeBox, setRemoveBox] = useState({\n    show: false,\n    item: null,\n  });\n  \n  const addGroup = (name) => {\n    setGroups(draft => {\n      draft[name] = {\n        name,\n        tasks: {}\n      };\n    })\n  }\n\n  const removeGroup = (name) => {\n    setGroups(draft => {\n      delete draft[name];\n    })\n  } \n\n  const updateGroupTasks = ({ group, tasks }) => {\n    setGroups(draft => {\n      draft[group.name].tasks = tasks;\n    })\n  }\n\n  useEffect(() => {\n    // Initialize General Group if empty\n    if (Object.keys(groups).length === 0) {\n      addGroup('General');\n    }\n    localStorage.setItem('Groups', JSON.stringify(groups));\n  })\n\n  return (\n    <div>\n      <div className='groups'>\n        <div className='head-bar'>\n          <h2>Groups</h2>\n          <button className='new-btn' onClick={() => setExpand({ groupForm: true })}>+</button>\n        </div>\n        {expand.groupForm && \n          <GroupForm \n            addGroup={addGroup}\n            exitForm={() => setExpand({ groupForm: false })}\n          /> \n        }\n        <ul>\n          {Object.entries(groups).map(([groupName, groupObj]) => {\n            return (\n              <li key={groupName} className='group'>\n                <button className='remove-btn' onClick={() => setRemoveBox({ show: true, item: groupName, })}>x</button>\n                <p className='title'>{groupName}</p>\n                <div className='taskBtn'>\n                  {expand.selectedGroup === groupName \n                    &&\n                      <button className='minimize' onClick={() => setExpand({ selectedGroup: null })}>-</button>\n                    ||\n                      <button className='expand' onClick={() => setExpand({ selectedGroup: groupName })}>Tasks</button>\n                  }\n                </div>\n                {expand.selectedGroup === groupName && \n                  <Tasks group={groupObj} updateGroupTasks={updateGroupTasks}/>\n                }\n                {removeBox.show && (removeBox.item === groupName) &&\n                  <ConfirmDelete \n                    deleteFunc={removeGroup}\n                    deleteItem={removeBox.item}\n                    closeCallback={() => setRemoveBox({ show: false, })}\n                  />\n                }\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To-Do</h1>\n      </header>\n      <Groups />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Groups';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}